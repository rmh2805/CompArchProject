These are the memory micro instructions! 

MOV:
    uR0 <- OP1Val, goto Writeback

SWP:
    uR0 <- OP2Val, ur1 <-OP1Val
    <No Op>, goto Writeback

CPY:
    if OP4Val != 0, goto +1
    OP4Val <- OP4Val - 1, <No Op>  # OP4Val <- 2^32 - 1, more than enough to catch all reasonable limits
    if OP3Val == 0, goto CPY_C
    if OP3Val == 1, goto CPY_P
    uCnt <- OP3Val, goto CPY_P_1

CPY_C:
    MAR <- OP1Val, OP1Val <- OP1Val + 1
    MDR <- Mem[MAR], MAR <- OP2Val
    Mem[MAR] <- MDR, <No Op>
    OP4Val <- OP4Val - 1, <No Op>
    
    if MDR == 0, goto Writeback
    if OP4Val == 0, goto Writeback
    
    OP2Val <- OP2Val + 1, goto CPY_C

CPY_P:
    MAR <- OP1Val, OP1Val <- OP1Val + 1
    MDR <- Mem[MAR], MAR <- OP2Val
    Mem[MAR] <- MDR, uCnt <- MDR
    OP4Val <- OP4Val - 1, <No Op>
    
    if uCnt == 0, goto Writeback
    if OP4Val == 0, goto Writeback

CPY_P_1:
    MAR <- OP1Val, OP1Val <- OP1Val + 1
    MDR <- Mem[MAR], MAR <- OP2Val
    Mem[MAR] <- MDR, <No Op>
    uCnt <- uCnt - 1, <No Op>
    OP4Val <- OP4Val - 1, <No Op>
    
    if uCnt == 0, goto Writeback
    if OP4Val == 0, goto Writeback
    
    OP2Val <- OP2Val + 1, goto CPY_P_1
