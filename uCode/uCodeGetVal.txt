# This microfunction will grab the full value of a given operand (memory 
# access and prefix bytes)
# Args:
#   uCnt: The operand's OpVal
#   uR1: The operand's OpType
# Uses:
#   uTmp, uCnt
# Returns:
#   uR0: The value from OpVal with prefixes and scaling applied (run EvalOp
#        and ScaleOp first to get value/EA)
#
GetVal:
    # If this is an EA, we must grab it from memory
    if uR1 & 0xF0 == 0x40, goto GetValMem       # Register indirect
    if uR1 & 0xF0 == 0x50, goto GetValMem       # Memory indirect
    if uR1 & 0xF0 == 0x60, goto GetValMem       # Index
    if uR1 & 0xF0 == 0x70, goto GetValMem       # Displacement
    if uR1 & 0xF0 == 0x80, goto GetValMem       # Absolute

    <No Op>, goto GetValScale                   # Non-memory operands can skip 
                                                # to scaling
GetValMem:
    uTmp <- 0x03, <No Op>
GetValMem1:
    MAR <- uCnt, uR0 <- uR0 << 8
    MDR <- mem[MAR], <No Op>
    uR0 <- uR0 | MDR, <No Op>

    if uCnt == 0x00, goto GetValMem2
    uTmp <- uTmp - 1, goto GetValMem1

GetValMem2:
    uCnt <- uR0, <No Op>


GetValPrefix: