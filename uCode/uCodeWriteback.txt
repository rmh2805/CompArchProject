Writeback:
    if IR in noOps, goto Fetch

    if IR == 0x02, goto WritebackAdd        # Writeback for CLR 
    if IR == 0x03, goto Fetch               # Writeback for DMP (none)
    if IR == 0x04, goto Fetch               # Writeback for OUT (none)

    if IR == 0x10, goto WritebackAdd        # Writeback for ADD
    if IR == 0x11, goto WritebackAdd        # Writeback for SUB
    if IR == 0x12, goto WritebackMul        # Writeback for MUL
    if IR == 0x13, goto WritebackDiv        # Writeback for DIV
    if IR == 0x14, goto WritebackAdd        # Writeback for MOD
    if IR == 0x15, goto WritebackAdd        # Writeback for AND
    if IR == 0x16, goto WritebackAdd        # Writeback for OR
    if IR == 0x17, goto WritebackAdd        # Writeback for XOR
    if IR == 0x18, goto WritebackCmp        # Writeback for CMP
    if IR == 0x19, goto WritebackInc        # Writeback for INC
    if IR == 0x1A, goto WritebackInc        # Writeback for DEC

    if IR == 0x20, goto WritebackCmp        # Writeback for MOV
    if IR == 0x21, goto WritebackSwp        # Writeback for SWP
    if IR == 0x22, goto Fetch               # Writeback for CPY (none)

    if IR == 0x31, goto Fetch               # Writeback for JMP (none)
    if IR == 0x32, goto Fetch               # Writeback for JAL (none)
    if IR == 0x34, goto Fetch               # Writeback for BEQ (none)
    if IR == 0x35, goto Fetch               # Writeback for BNE (none)
    if IR == 0x36, goto Fetch               # Writeback for BGT (none)
    if IR == 0x37, goto Fetch               # Writeback for BGE (none)
    if IR == 0x38, goto Fetch               # Writeback for BIE (none)
    if IR == 0x39, goto Fetch               # Writeback for BDE (none)
    if IR == 0x3A, goto Fetch               # Writeback for BAO (none)
    if IR == 0x3B, goto Fetch               # Writeback for BAC (none)

WritebackAdd:
    # Apply prefixes (and truncation) to this value
    uR1 <- OP1Type, <No Op>
    uRet <- uPC, goto PrefixRet
    OP2Val <- uR0, <No Op>                  # Stash the value for later

    # If Mem, calculate EA and scale
    uCnt <- OP1Val, uR1 <- OP1Type
    uRet <- uPC, goto MemRet
    uCnt <- OP1Scale, uR1 <- uR0
    uRet <- uPC, goto ScaleOp

WritebackMul:

WritebackDiv:

WritebackCmp:

WritebackInc:

WritebackCmp:

WritebackSwp: